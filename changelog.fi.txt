itmon branchi
=================
-testattu zero,rnd
-mmu vois testata ettei se riko mitään
-pic ja uartit testattaneen kerralla
keskeytykset
=================
-Pitää enabloida laitteesta ja picistä. 
-hyppää aina osoitteessa 0 olevaan osoitteeseen
-tekee käytännössä parametrittoman CALLin eli palaaminen tapahtuu
 EXITillä. 
-keskeytys tapahtuu jos tulee "ennenäkemätön" 
 keskeytyksen nouseva reuna ja se keskeytys on 
 enabloidu ja kaikki keskeytykset ei ole disabloitu
-keskeytyskäsittelyrutiinista kannattaa tehdä 
 re-entrant ja disabloida keskeytykset heti 
 rutiiniin mentäessä. 
-kun keskeytykset re-enabloidaan, "muistaa" pic 
 disabloinnin aikana tulleet keskeytykset ja 
 aiheuttaa keskeytyksen. 
 
 
irq         device
0           MMU reserved
1           UART1
2           UART2
3           VIC
4           RTC
5           SID

devicet
=================
-vanhat IN/OUT devicet muunnettiin geneerisemmäksi
-lisättiin uusia esimerkkidevicejä. 

portti    device
0           CRT (writeonly, failaa jos lukee)
1           KBD (readonly, failaa jos lukee eikä ole dataa,tai jos kirjottaa)
2           RES (varattu, failaa jos kosket)
3           RES
4           RES
5           RES
6           STDIN (readonly, failaa jos data loppuu tai jos kirjotat)
7           STDOUT (writeonly, failaa jos luet)
8           RES
9           RES
10          RES
11          ZERO (write /dev/null, read /dev/zero)
12          RND  (read to get (secure)random, write to set (PSR)seed)
13          MMU  (write 3 values to set from,to,length , or 0xffffffff to 
                  reset. Will map from,from+length of underlying memory to
                  to,to+length of visible memory)
14-17       RESMMU reserved for mmu magic
18-19       PIC  0 command port , 1 interrupt enable
                 0 read to get high interrupts
                 0 write 0->clear interrupts
                         1->disable all
                         2->re-enable
                 1 read to see enabled interrupts
                 1 write to set enabled , if you disable an interrupt it
                        will be cleared
20-22       UART1   0 data port 1 state port 2 control
23-25       UART2   see source code..
26-30       VIC     write 0 and new baseaddress to port 0
                    write 1 and new margincolor to port 0
31          RTC     watchdog/RTC counting processor clocks
                    write the number of clocks , it will count down
                    and then interrupt unless you rewrite. 0 will 
                    disable. reading will return clocks since reset.
32-33       SID     sound device , write 0 to port 0 for beep

Muutosloki v1.300
=================
Lisättiin titokoneeseen grafiikkatila.

(Toni Ruottu, 14.5.2012)

Muutosloki v1.203
=================
Kohahdus projekti teki titokoneeseen seuraavat muutokset

- RandomAccessMemory.setMemoryLine(..)
  Lisätty "memory_references++;"

- RandomAccessMemory.getMemoryReferences()
  Lisätty "- getCodeAreaSize() - getDataAreaSize()". Nämä vähentävät
  muistiviitelaskurista ohjelman latauksen aiheuttamat viitteet.

- Processor.subr(..)
  Lisätty 2x "addToStack();" sekä "stack_size--;"
  Lisätty "stack_size = stack_size - param;"

- Control.run(..)
  Lisätty "Throw new TTK91ExecutionOverrun(..)" jos steps liian iso

- Uusi luokka TTK91ExecutionOverrun


(Mikko Kinnunen 2006-11-23)


Muutosloki v1.202
=================

Poistettu graafisesta käyttöliittymästä turhaksi todettu käännös- ja
ajoaikainen hidaste, joka teki pitkien ohjelmien kääntämisestä turhan 
tuskallista ("wait(70)"). 

Muutetut luokat: fi/hu/cs/titokone/GUIBrain.java

(Sini Ruohomaa, 14.12.2005)

Muutosloki v1.201
================

Korjattu taulukoiden alustukseen (DS) liittyvä bugi, jossa
symbolitauluun vietiin virheellisiä muistiosotteita. Muutettiin
luokkaa Compiler. Virheen kuvaus oli:

	DS ei toimi oikein eli esim.
	Tbl DS 5
	Xprt DC 0 
	niin Xprt symbolin arvoksi tullee Tbl+1

(Jari Suominen, 15.11.2005)


Muutosloki v1.2
===============

Alkuperäisen Koksi-ohjelman tuntema käsky 'NOT' puuttui
Titokoneesta. Not käsky lisättiin käskykoodilla 27.

Titokoneen yhteydessä esitelty uusi käsky SHRA siirrettiin, koska
se käytti NOT-käskylle varattua käskykoodia. SHRA-käskyn uusi koodi
on 28.

Nyt käskyt LOAD/STORE R1, (R2) toimivat. Korjaus tapahtui lisäämäällä 0 ennen 
alkavaa sulkua. STORE R1, @R2 toimii, korjaaminen tapahtui sallimalla 
@-osoitusmoodin käyttö STORE käskyn yhteydessä.

Lisätty Titokoneeseen käskylaskuri, jolla saadaan tieto suoritettujen
konekäskyjen määrästä. Lisätty metodi on nimeltään GiveCommAmount().

Lisätty Titokoneeseen toiminto, jolla saadaan tieto pinon 
lopullisesta koosta. Lisätty metodi on nimeltään GiveStackSize().

Lisätty Titokoneeseen toiminto, jolla saadaan tieto ajettavana olevan
ohjelman lopullistesta koodisegmentin koosta. Lisätty metodi on nimeltään 
getCodeAreaSize().

Lisätty Titokoneeseen toiminto, jolla saadaan tieto ajettavana olevan
ohjelman lopullistesta datasegmentin koosta. Lisätty metodi on nimeltään
getDataAreaSize().

(Koskelo-ryhmä 2004)


Muutosloki v1.1
===============

Titokoneesta on uusi versio 1.1. 
Näyttää siltä, että tämä Titokone pysyy pystyssä Javan uusimmassa
buildissa (1.4.2_05) ja lisäksi myös ainakin Macin Java 1.4.1:llä, jossa
oli aiemmin tiedostodialogia avatessa kaatumisen ongelma. Kaikkiaan noin
neljän rivin muutos, yksi Translator.javassa ja kolme GUI.javassa. 

Uusi versio on jo jakelussa. 
(Sini Ruohomaa, 23.8.2004)


Titokoneen piirteitä/ongelmia
=============================

Titokone 1.1b vaatii ainakin toistaisesti JRE 1.5:n, eli vanhemmat
versiot eivät toimi.
---
Nimettömät DC:t eivät toimi kuten ehkä joku odottaisi. Esim.
    Pekka DC 0
          DC 2
          DC 4
antaa virheilmoituksia.

Koodin seassa pitäisi DC:t eivät toimi oikein. Ohjelman alussa 
olevat DC:t varataan lopusta ja keskellä olevat siitä, missä ovat.
(Heikki Lindholm, 20.8.2004)
---
Animoinnissa ainakin joillakin koneilla suurin animointinopeus
on niin nopea, että sitä ei näe!
(Teemu Kerola, 18.8.2004)
---
Exactumin luokalle B221 pätee: löysin Sunin arkistoista version vanhemman 
javan (1.4.2_04). Testasin Titokonetta sillä ja se näytti toimivan. 
Nyt vanha java on paketoitu ja pistetty asennukseen eli kun koneen 
boottaa se poistaa java 1.4.2_05:n ja asentaa 1.4.2_04:n.  

Kotikoneessa vanhempi java (sekä sdk että jre) löytyy osoitteesta
http://java.sun.com/products/archive/j2se/1.4.2_04/index.html
Kumpikaan paketti ei asenna javaa polkuun, joten se on tehtävä käsin, 
jotta titokone.bat skripti toimii.

Polku asetetaan seuraavasti:

Windows NT/2000/XP

Napsautetaan hiiren oikealla näppäimellä My Computer-ikonia jolloin 
aukeaa harmaa laatikko josta valitaan vaihtoehto Properties. Nyt pitäisi 
olla auki System Properties-ikkuna. Valitaan sieltä välilehti Advanced 
ja painetaan alhaalla olevaa Enviroment Variables nappia. Valitaan 
System variables listasta Path-muuttuja ja editoidaan siihen javan 
asennus hakemisto\bin, ja sen jälkeen ;-merkki.

;-merkin tehtävä on erottaa hakemistot toisistaan.

esim.
Alkuperäinen polku:
%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;

Uusi polku:
%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;C:\JavaSDK1.4.2\bin;

DOS tai Windows 95/98/ME

Avataan c:\autoexec.bat tekstieditoriin (esim. notepad). Etsitään rivi
set PATH=<tässä on systeemin polku> ja editoidaan javan asennus 
hakemisto polun perään kuten yllä. Tämän jälkeen tallennetaan tiedosto 
ja käynnistetään kone uudelleen.

Windows NT/2000/XP:ssä polku tulee voimaan seuraavaan käynnistettyyn 
komentorivitulkkiin, kun taas DOS tai Windows 95/98/ME on syytä käynnistää 
uudelleen.

(Pasi Vettenranta, 17.8.2004)
---
Muisti ilmeisesti alustetaan aina suorituksen alussa.
DC-valekäskyillä määritellyt alustetaan arvonsa mukaisesti
ja DS-valekäskyillä määritellyt alueet nollataan.
Suorituksen alussa näkyvä data-alue ei näytä näitä alustuksia.
(Teemu Kerola, 4.8.2004)

Raportoikaa muut uudet piirteet/ongelmat minulle, kiitos.
Teemu Kerola
